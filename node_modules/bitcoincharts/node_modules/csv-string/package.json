{
  "name": "csv-string",
  "version": "1.0.5",
  "author": {
    "name": "Nicolas Thouvenin",
    "email": "nthouvenin@gmail.com"
  },
  "contributors": [
    {
      "name": "J Baumbach",
      "url": "https://github.com/jbaumbach"
    },
    {
      "name": "Sam Hauglustaine",
      "url": "https://github.com/smhg"
    }
  ],
  "description": "It's a collection of javascript tools (parse/stringify) for CSV strings. Unlike many other similar modules, it works correctly with fields containing newlines (including on the first line)",
  "keywords": [
    "csv",
    "parser",
    "string",
    "generator"
  ],
  "homepage": "http://github.com/touv/node-csv-string",
  "scripts": {
    "test": "mocha"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/touv/node-csv-string.git"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": ">=1.8.1",
    "should": ">=1.2.1"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.6.0"
  },
  "readme": "# Javascript CSV Strings\n\n[![Build Status](https://secure.travis-ci.org/touv/node-csv-string.png?branch=master)](http://travis-ci.org/touv/node-csv-string)\n\nIt's a collection of javascript tools (parse/stringify) for CSV strings. It can work row by row. \nUnlike many other similar modules, it works correctly with fields containing newlines (including on the first line)\n \n## Contributors\n\n  * [Nicolas Thouvenin](https://github.com/touv) \n  * [J. Baumbach](https://github.com/jbaumbach)\n  * [Sam Hauglustaine](https://github.com/smhg)\n\n# Installation\n\nWith [npm](http://npmjs.org) do:\n\n    $ npm install csv-string\n\n\n# Tests\n\nUse [mocha](https://github.com/visionmedia/mocha) to run the tests.\n\n    $ npm install mocha\n    $ mocha test\n\n# API Documentation\n\n## parse(input : String, [separtor : String]) : Object\n\nParse `input` to convert to an array.\n```javascript\n\tvar CSV = require('csv-string'),\n\t arr = CSV.parse('a,b,c\\na,b,c');\n\n\tconsole.log(arr);\n```\nOutput:\n\t\n\t[ [ 'a', 'b', 'c' ], [ 'a', 'b', 'c' ] ]\n\t\n\t\n## stringify(input : Object, [separtor : String]) : String\n\nConverts `input` to a CSV string. \n\n```javascript\n\tvar CSV = require('csv-string');\n\t\n\tconsole.log(CSV.stringify(['a', 'b', 'c']));\n\tconsole.log(CSV.stringify([['c', 'd', 'e'], ['c','d','e']]));\n\tconsole.log(CSV.stringify({a:'e', b:'f', c:'g'}));\n```\nOutput:\n\t\n\ta,b,c\n\t\n\tc,d,e\n\tc,d,e\n\t\n\te,f,g\n\n## detect(input : String) : String\n\nDetects the best separator.\n\n```javascript\n\tvar CSV = require('csv-string');\n\t\n\tconsole.log(CSV.detect('a,b,c'));\n\tconsole.log(CSV.detect('a;b;c'));\n\tconsole.log(CSV.detect('a|b|c'));\n\tconsole.log(CSV.detect('a\\tb\\tc'));\n```\nOutput:\n\t\n\t,\n\t;\n\t|\n\t\\t\n\t\n\n## forEach(input : String, sep : String, callback : Function) \n## forEach(input : String, callback : Function) \n_callback(row : Array, index : Number) : undefined_\n\nCalls `callback` for each CSV row/line. The Array passed to callback contains the fields of the current row.  \n\n\n```javascript\n\tvar CSV = require('csv-string');\n    var data = 'a,b,c\\nd,e,f';\n\tCSV.forEach(data, ',', function(row, index) {\n\t\tconsole.log('#' + index + ' : ', row);\n\t});\n```\nOutput:\n\t\n\t#0 :  [ 'a', 'b', 'c' ]\n\t#1 :  [ 'd', 'e', 'f' ]\n\t\n\n## read(input : String, sep : String, callback : Function) : Number\n## read(input : String, callback : Function) : Number\n_callback(row : Array) : undefined_\n\nCalls `callback` when a CSV row is readed. The Array passed to callback contains the fields of the row.  \nReturns the first offset after the row.\n\n\n```javascript\n\tvar CSV = require('csv-string');\n    var data = 'a,b,c\\nd,e,f';\n\tvar index = CSV.read(data, ',', function(row) {\n\t\tconsole.log(row);\n\t});\n    console.log(data.slice(index));\n```\nOutput:\n\t\n\t[ 'a', 'b', 'c' ]\n\td,e,f\n\t\n\n\n\n# Also\n\n* https://npmjs.org/browse/keyword/csv\n* http://www.uselesscode.org/javascript/csv/\n* https://github.com/archan937/csonv.js\n\n# License\n\n[MIT/X11](https://github.com/touv/node-csv-string/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/touv/node-csv-string/issues"
  },
  "_id": "csv-string@1.0.5",
  "dist": {
    "shasum": "d432921be495a26b401137466c10e496706df9b8"
  },
  "_from": "csv-string@1.0.5",
  "_resolved": "https://registry.npmjs.org/csv-string/-/csv-string-1.0.5.tgz"
}
